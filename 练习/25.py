#coding=gbk
# A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
# D C G E J O I N Y M P T V U X S Z K A L Q W R B F H
# sss和ss2用于解密
sss = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
       'W', 'X', 'Y', 'Z']
ss2 = [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0],
       [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0],
       [0, 0]]
ss = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8, 9, 7, 9, 3, 2, 3, 8, 4, 6, 2, 6, 4, 3, 3]  # 用于加密和解密
# 用于重复的字母
s = [[73, 89], [81, 90], [82, 75], [84, 76], [85, 81], [86, 87], [87, 82], [89, 70], [90, 72],
     [105, 121], [113, 122], [114, 107], [116, 108], [117, 113], [118, 119], [119, 114], [121, 102], [122, 104]]


# 列表----------------------------------------------------------------------------------------------------
def jia():
    w = ''  # 用于累加密码
    for i in sr:  # 拆分口令
        a = ord(i)
        js = 0  # 使手动替换的字母不会被重复加密
        if js == 0:
            for j in range(len(s)):  # 替换重复的字母
                if js == 0:
                    if a == s[j][0]:
                        a = s[j][1]
                        js += 1
        if (64 < a and a < 91 and js == 0):  # 大写字母解密
            a = a + ss[a - 65]
            if (a > 90):  # asc码超出相应范围时减26
                a = a - 26
        elif (96 < a and a < 123 and js == 0):  # 小写字母解密
            a = a + ss[a - 97]
            if (a > 122):  # asc码超出相应范围时减26
                a = a - 26
        w = w + chr(a)  # 累加密码
    print(w)


def jie():
    w = ''  # 用于累加口令
    for i in sr:  # 拆分密码
        a = ord(i)
        js = 0  # 使手动替换的字母不会被重复加密
        if js == 0:
            for j in range(len(s)):
                if js == 0:
                    if a == s[j][1]:
                        a = s[j][0]
                        js += 1
        if (64 < a and a < 91 and js == 0):  # 大写字母解密
            a = a - ss2[a - 65][0]
            if (a < 65):  # asc码超出相应范围时加26
                a = a + 26
        elif (96 < a and a < 123 and js == 0):  # 小写字母解密
            a = a - ss2[a - 97][0]
            if (a < 97):  # asc码超出相应范围时加26
                a = a + 26
        w = w + chr(a)  # 累加口令
    print(w)


# 加密、解密包--------------------------------------------------------------------------------------------
# 为ss2赋值，使其可以用于解密
for t in range(len(ss)):
    b = ord(sss[t]) + ss[t] - 65
    if b > 26:
        b -= 26
    if ss2[b][1] == 0:  # ss2[b-1][0]使其不会被重复赋值
        ss2[b][0] = ss[t]
        ss2[b][1] += 1
pd = input('要加密还是解密？（1.加密   2.解密）')
while (pd != '3'):
    if pd == '1':  # 判断加密还是解密
        sr = input('请输入口令：')
        jia()
    else:
        sr = input('请输入密码：')
        jie()
    pd = input('要加密还是解密？（1.加密  2.解密  3.退出）')
